USER SYMBOL by DSCH 3.5
DATE 5/11/2023 8:06:04 PM
SYM  #SUMATOR_4_BITI
BB(0,0,40,100)
TITLE 10 -7  #SUMATOR_4_BITI
MODEL 6000
REC(5,5,30,90)
PIN(0,10,0.00,0.00)CIN
PIN(0,90,0.00,0.00)A1
PIN(0,50,0.00,0.00)B1
PIN(0,60,0.00,0.00)A4
PIN(0,20,0.00,0.00)B4
PIN(0,80,0.00,0.00)A2
PIN(0,40,0.00,0.00)B2
PIN(0,70,0.00,0.00)A3
PIN(0,30,0.00,0.00)B3
PIN(40,40,2.00,1.00)S1
PIN(40,30,2.00,1.00)S2
PIN(40,50,2.00,1.00)cout
PIN(40,20,2.00,1.00)S3
PIN(40,10,2.00,1.00)S4
LIG(0,10,5,10)
LIG(0,90,5,90)
LIG(0,50,5,50)
LIG(0,60,5,60)
LIG(0,20,5,20)
LIG(0,80,5,80)
LIG(0,40,5,40)
LIG(0,70,5,70)
LIG(0,30,5,30)
LIG(35,40,40,40)
LIG(35,30,40,30)
LIG(35,50,40,50)
LIG(35,20,40,20)
LIG(35,10,40,10)
LIG(5,5,5,95)
LIG(5,5,35,5)
LIG(35,5,35,95)
LIG(35,95,5,95)
VLG module SUMATOR_4_BITI( CIN,A1,B1,A4,B4,A2,B2,A3,
VLG  B3,S1,S2,cout,S3,S4);
VLG  input CIN,A1,B1,A4,B4,A2,B2,A3;
VLG  input B3;
VLG  output S1,S2,cout,S3,S4;
VLG  wire w3,w4,w6,w7,w8,w10,w11,w12;
VLG  wire w13,w14,w15,w16,w17,w18,w19,w25;
VLG  wire w28,w30,w31,w32,w33,w34,w35,w36;
VLG  wire w37,w38,w39,w40,w41,w44,w46,w47;
VLG  wire w48,w49;
VLG  not #(1) inv_1(w4,w3);
VLG  not #(3) inv_2(w3,CIN);
VLG  xor #(3) xor2_3(S1,w6,w4);
VLG  not #(1) inv_4(w8,w7);
VLG  nor #(2) nor3_5(w12,w7,w10,w11);
VLG  and #(3) and2_6(w10,w13,w14);
VLG  and #(3) and3_7(w11,w13,w15,w3);
VLG  and #(3) and2_8(w16,w8,w13);
VLG  xor #(3) xor2_9(S2,w16,w17);
VLG  nor #(3) nor2_10(w17,w14,w18);
VLG  and #(3) and2_11(w6,w19,w15);
VLG  nor #(5) nor2_12(w14,B1,A1);
VLG  and #(3) and2_13(w18,w3,w15);
VLG  nand #(4) nand2_14(w15,A1,B1);
VLG  nor #(4) nor2_15(w25,B4,A4);
VLG  nand #(5) nand2_16(w13,A2,B2);
VLG  xor #(3) xor2_17(S3,w28,w12);
VLG  and #(3) and2_18(w28,w30,w31);
VLG  not #(1) inv_19(w30,w32);
VLG  nor #(5) nor2_20(w7,B2,A2);
VLG  not #(1) inv_21(w19,w14);
VLG  assign w33=w31&w13&w15&w3;
VLG  and #(3) and3_22(w34,w14,w31,w13);
VLG  and #(3) and2_23(w35,w31,w7);
VLG  assign w37=w32|w35|w34|w33;
VLG  not #(1) inv_24(w38,w37);
VLG  and #(3) and2_25(w41,w39,w40);
VLG  nor #(4) nor2_26(w32,B3,A3);
VLG  not #(1) inv_27(cout,w44);
VLG  xor #(3) xor2_28(S4,w41,w38);
VLG  not #(1) inv_29(w39,w25);
VLG  assign w46=w40&w31&w13&w15&w3;
VLG  assign w47=w14&w40&w31&w13&OP[3];
VLG  and #(3) and3_30(w48,w7,w40,w31);
VLG  and #(3) and2_31(w49,w40,w32);
VLG  assign w44=w25|w49|w48|w47|w46;
VLG  nand #(4) nand2_32(w40,A4,B4);
VLG  nand #(5) nand2_33(w31,A3,B3);
VLG endmodule
FSYM
